use LibrarySystem

select * from Member
where Acc_Open_Date like '2006%';

select Book_Name from Book
where Author='Loni' and cost<600;

select * from Issue
where Return_date is null;

update Issue
set Return_date='31-Dec-06'
where Lib_Issue_Id!=7005 and Lib_Issue_Id!=7006;

select * from Issue
where datediff(Day,Issue_Date,Return_date)>30;

select Book_Name from Book
where cost>500 and cost<750 and category='Database';

select Book_Name from Book
where category='Science' or category='Database' or category='Fiction' or category='Management';

select * from Member
order by Penalty_Amount desc;

select * from Book
order by category,cost desc;

select * from Book
where Book_Name like '%SQL%';

select Member_Name from Member
where (Member_Name like'R%' or Member_Name like 'G%')and Member_Name LIKE '%I%';

select upper(Author) as Author from Book
order by Book_Name desc;

select Book_No,('is written by') as '--------------------',Book_Name from Book;

--select TO_CHAR(Issue_date,'Monday/July/10/2006'),TO_CHAR(RETURN_DATE,'Monday/July/10/2006')FROM Issue 
--WHERE Lib_Issue_Id=7001

select concat(Book_Name,' *. ',Author)from Book

select Lib_Issue_Id,Issue_Date,Return_Date,datediff(DAY,Issue_Date,Return_date) as No_Of_Days_Book_Issued  from Issue


select * from Member
order by Acc_Open_Date;

select count(Book_Name) from Book
where Book_No=101;

select sum(Penalty_Amount) from Member

select sum(cost) from Book
where category='Database';


select min(cost) from Book;


select avg(cost) from Book
where category='Database';




--------------------------------------------------------------------------------------------------------------------------------------


select Book.category,
count(*) as count
from Book
group by Book.category


select b.Book_No,count(b.Book_No) as No_Of_Times_BookIssued
from Issue b
group by Book_No
order by no_of_times_bookissued desc

select max(Penalty_Amount) as Maximum,min(Penalty_Amount) as Minimum,sum(Penalty_Amount) as Total,AVG(Penalty_Amount) as Average from Member

select m.Member_Id,count(m.Member_Id) as No_Of_Books
from Issue m
group by Member_Id
having count(Member_Id)>2
order by Member_Id

Select member_id,Book_No,
count(distinct(Book_No)) as count1 from issue group by Book_No,Member_Id 
order by count1 desc

Select datename(MONTH,Issue_Date) as monthnames,
COUNT(Book_No) as noofbooks from issue group by datename(Month,Issue_Date)
order by 2 desc 

Select * from issue

Select Book_No,Book_Name from Book where Book_No not in(Select Book_No from issue)

--Select i.member_id from issue i inner join member j on i.Member_Id=j.member_id group by i.member_id having count(Book_No)>0 

Select member_id from issue where member_id in(Select member_id from member) intersect (Select member_id from issue group by member_id having count(Book_No)>0)

Select top 1 member_id,count(Book_No) as count1 from issue group by member_id 
order by count1 desc 

Select * from issue where DATENAME(month,Issue_Date) in ('July','December')

Select i.Book_No,i.Book_Name,j.Issue_Date
FROM Book i inner join issue j on i.Book_No=j.Book_No 
where MONTH(j.issue_date)=12 and i.Category='Database' Select issue.member_id,member.member_name,
count(issue.Book_No) as count1  from member inner join issue on issue.Member_Id=member.Member_Id 
group by issue.member_id,member.member_name
order by count1 desc

Select issue.Lib_Issue_Id,issue.Member_Id,issue.Book_No,issue.Issue_Date,issue.Return_date 
from issue inner join member on issue.Member_Id=member.member_id
where member.member_name='Richa Sharma'

Select * from member where member_id in (Select issue.member_id
from issue inner join Book on issue.Book_No=Book.Book_No
where Book.Category='Database') 

Select Category,max(Cost) as highestprice
from Book group by Category

Select issue.Lib_Issue_Id,issue.Member_Id,issue.Book_No 
from issue inner join member on issue.Member_Id=member.member_id
where issue.Issue_Date not between member.Acc_open_date and issue.Return_date

Select * from member where member_id not in(Select member.member_id
from issue inner join member on member.member_id=Issue.Member_Id 
group by member.member_id)

Select member.member_id,member.member_name,count(issue.Book_No) as booksissued,member.Max_Books_Allowd  
from issue inner join member on issue.Member_Id=member.member_id
group by member.member_id,member.member_name,member.Max_Books_Allowd having member.Max_Books_Allowd<=count(issue.Book_No)

Select member.member_id,member_name,issue.Book_No
from issue inner join member on member.member_id=Issue.Member_Id
where issue.Book_No in(Select issue.Book_No
from issue inner join member on member.member_id=Issue.Member_Id
where member.member_name like'Garima%')

Select Book.Book_No,Book.Book_Name,Book.Cost
from issue inner join Book on Issue.Book_No=Book.Book_No 
where DATEDIFF(day,Issue.Issue_Date,Issue.Return_date)>30 

Select Book_Name,author
from Book
where author in (Select author from book group by author having count(Book_Name)>1)

Select top 3 * from Book order by Cost desc

Select sum(Cost) from Book where Book_No in(Select Book_No from issue where Return_date is null)

Select * from Book where Book_No in(Select top 1 Book_No 
from issue group by Book_No order by count(Book_No) desc)
